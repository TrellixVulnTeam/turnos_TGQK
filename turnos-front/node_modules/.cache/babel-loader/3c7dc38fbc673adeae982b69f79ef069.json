{"ast":null,"code":"var _jsxFileName = \"/Users/tomas/Desktop/Proyectos/turnos/turnos-front/src/App.js\";\nimport React from \"react\"; // Estilos\n\nimport './App.scss'; // Sistema de Routeo\n\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport routes from \"./config/routes\"; // Componentes\n\nimport AdminHome from './pages/Admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: routes.map((route, index) => /*#__PURE__*/_jsxDEV(RouterWithSubRouters, {\n      route: route\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n}\n\n_c = App;\n;\n/*  Esta función lo que hace es renderizar todas las entradas\n    que se encuentran dentro del array \"routes\" del fihero\n    /config/routes.js\n    de esta forma cuando necesitemos mas paginas solo hay que registrarlas \n    en dicho fichero sin necesida de modificar el router.\n*/\n\nfunction RouterWithSubRouters(props) {\n  const {\n    route\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: route.routes2.map((item, index) => /*#__PURE__*/_jsxDEV(Route, {\n      path: item.path,\n      exact: false,\n      element: /*#__PURE__*/_jsxDEV(route.component, {\n        route: route.routes2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = RouterWithSubRouters;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"RouterWithSubRouters\");","map":{"version":3,"sources":["/Users/tomas/Desktop/Proyectos/turnos/turnos-front/src/App.js"],"names":["React","BrowserRouter","Router","Route","Routes","routes","AdminHome","App","map","route","index","RouterWithSubRouters","props","routes2","item","path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,YAAP,C,CACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,eAAtB;;;AAGA,SAASC,GAAT,GAAe;AACb,sBACI,QAAC,MAAD;AAAA,cAGKF,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV,QAAC,oBAAD;AAAkC,MAAA,KAAK,EAAED;AAAzC,OAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA,YADD;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AASD;;KAVQH,G;AAUR;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,SAASI,oBAAT,CAA8BC,KAA9B,EAAqC;AACnC,QAAM;AAACH,IAAAA;AAAD,MAAUG,KAAhB;AAEA,sBACE,QAAC,MAAD;AAAA,cACGH,KAAK,CAACI,OAAN,CAAcL,GAAd,CAAkB,CAACM,IAAD,EAAOJ,KAAP,kBACjB,QAAC,KAAD;AAEE,MAAA,IAAI,EAAEI,IAAI,CAACC,IAFb;AAGE,MAAA,KAAK,EAAE,KAHT;AAIE,MAAA,OAAO,eAAE,QAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,KAAK,EAAEN,KAAK,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA;AAJX,OACOH,KADP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;MAfQC,oB;AAiBT,eAAeJ,GAAf","sourcesContent":["import React from \"react\";\n// Estilos\nimport './App.scss';\n// Sistema de Routeo\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport routes from \"./config/routes\";\n\n// Componentes\nimport AdminHome from './pages/Admin';\n\n\nfunction App() {\n  return (\n      <Router>\n        {/* el metodo routes.map es como un bule que recorre el array \"routes\"\n        devolviendo \"route\" como cada item, e index como la posición */}\n          {routes.map((route, index) => (\n            <RouterWithSubRouters key={index} route={route} />\n          ))}\n      </Router> \n  );\n};\n\n/*  Esta función lo que hace es renderizar todas las entradas\n    que se encuentran dentro del array \"routes\" del fihero\n    /config/routes.js\n    de esta forma cuando necesitemos mas paginas solo hay que registrarlas \n    en dicho fichero sin necesida de modificar el router.\n*/\nfunction RouterWithSubRouters(props) {\n  const {route} = props;\n\n  return(\n    <Routes>\n      {route.routes2.map((item, index) => (\n        <Route\n          key={index}\n          path={item.path}\n          exact={false}\n          element={<route.component route={route.routes2}/>}\n        />\n      ))}\n    </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}